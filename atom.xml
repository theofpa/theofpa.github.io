<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[theofpa octopress blog]]></title>
  <link href="http://theofpa.github.io/atom.xml" rel="self"/>
  <link href="http://theofpa.github.io/"/>
  <updated>2014-08-23T23:31:00+02:00</updated>
  <id>http://theofpa.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elasticsearch store using Hive]]></title>
    <link href="http://theofpa.github.io/blog/2014/08/23/elasticsearch-store-using-hive/"/>
    <updated>2014-08-23T23:26:49+02:00</updated>
    <id>http://theofpa.github.io/blog/2014/08/23/elasticsearch-store-using-hive</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coursera Data Science specialization]]></title>
    <link href="http://theofpa.github.io/blog/2014/07/06/coursera-data-science-specialization/"/>
    <updated>2014-07-06T15:25:24+02:00</updated>
    <id>http://theofpa.github.io/blog/2014/07/06/coursera-data-science-specialization</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently finished the 9 courses of the Data Science specialization in Coursera, offered by Johns Hopkins University. Prior to that I&rsquo;ve finished the Machine Learning course of Dr.Andew Ng, offered by Stanford University.</p>

<p>While waiting for the Data Science specialization capstone project to be offered, I&rsquo;ve spent some days to review all the materials I&rsquo;ve been through the last 5 months.</p>

<p>I&rsquo;ve extracted a list of references and notes I took during this wonderful journey, which can be found in the <a href="http://theofpa.github.io/datascience-overview/">Data Science Overview</a> page.</p>

<p>My plan is to use it as a bookmarked list of resources for quick reference during the capstone project, and any future work on the field.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing HTTP/2.0 draft-09 implementations]]></title>
    <link href="http://theofpa.github.io/blog/2014/01/01/testing-http-slash-2-dot-0-draft-09-implementations/"/>
    <updated>2014-01-01T20:08:43+01:00</updated>
    <id>http://theofpa.github.io/blog/2014/01/01/testing-http-slash-2-dot-0-draft-09-implementations</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/tatsuhiro-t">Tatsuhiro Tsujikawa</a> has implemented an HTTP/2.0 server in C, according to draft-09 of HTTPdis. In Ubuntu, we can bring up the server for testing as shown below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>theofpa@snf-155685:~$ git clone https://github.com/tatsuhiro-t/nghttp2.git
</span><span class='line'>theofpa@snf-155685:~$ cd nghttp2/
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ sudo apt-get install libevent-dev openssl
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ autoreconf -i
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ automake
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ autoconf
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ ./configure
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ make
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mysitename.key -out mysitename.crt
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ mkdir htdocs
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ echo "&lt;html&gt;&lt;body&gt;Congrats, this is the content served through HTTP/2.0&lt;/body&gt;&lt;/html&gt;" &gt; htdocs/index.html
</span><span class='line'>theofpa@snf-155685:~/nghttp2$ sudo src/nghttpd -v -d htdocs 443 mysitename.key mysitename.crt</span></code></pre></td></tr></table></div></figure>


<p>Register DNS for IPv4 &amp; IPv6:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http2.bigdata.gr  IN  A     83.212.117.122
</span><span class='line'>http2.bigdata.gr  IN  AAAA  2001:648:2ffc:1225:a800:7ff:fedd:3064</span></code></pre></td></tr></table></div></figure>


<p>And we can test the web server from our MacOSX with an HTTP/2.0 client, like the node-http2 impleneted by <a href="http://gabor.molnar.es">Gábor Molnár</a> in nodejs as a Google Summer of Code project:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>theofpa@kedr ~/Development $ git clone https://github.com/molnarg/node-http2.git
</span><span class='line'>theofpa@kedr ~/Development/node-http2 (master)$ npm install
</span><span class='line'>theofpa@kedr ~/Development/node-http2 (master)$ node ./example/client.js 'https://http2.bigdata.gr/'
</span><span class='line'>&lt;html&gt;&lt;body&gt;Congrats, this is the content served through HTTP/2.0&lt;/body&gt;&lt;/html&gt;</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/mnot">Mark Nottingham</a> gathered a list of <a href="https://github.com/http2/http2-spec/wiki/Implementations">implementations which support HTTP/2.0 draft-09</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstraping a VM in Okeanos using Chef]]></title>
    <link href="http://theofpa.github.io/blog/2013/12/08/bootstraping-a-vm-in-okeanos-using-chef/"/>
    <updated>2013-12-08T21:29:10+01:00</updated>
    <id>http://theofpa.github.io/blog/2013/12/08/bootstraping-a-vm-in-okeanos-using-chef</id>
    <content type="html"><![CDATA[<p>To spawn a new instance in Okeanos make sure you have the kamaki command enabled:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kedr:Development theofpa$ virtualenv kamaki-env
</span><span class='line'>kedr:Development theofpa$ source kamaki-env/bin/activate
</span><span class='line'>(kamaki-env)kedr:Development theofpa$ pip install kamaki
</span><span class='line'>(kamaki-env)kedr:Development theofpa$ pip install ansicolors
</span><span class='line'>(kamaki-env)kedr:Development theofpa$ pip install mock  
</span><span class='line'>(kamaki-env)kedr:Development theofpa$ kamaki config set token XXXX== # You can get the token from the Okeanos website</span></code></pre></td></tr></table></div></figure>


<p>By using kamaki</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(kamaki-env)kedr:Development theofpa$ kamaki server list</span></code></pre></td></tr></table></div></figure>


<p>Create the VM:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(kamaki-env)kedr:Development theofpa$ kamaki server create naxos 28 e7a661ad-1536-45f1-8776-aac9b9ff0c1d </span></code></pre></td></tr></table></div></figure>


<p>This will create the VM for you, and it will return the hostname/IP and root password in case of Centos. By using knife bootstrap the VM for chef and provision the recipe of your app:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(kamaki-env)kedr:Development theofpa$ knife bootstrap snf-81529.vm.okeanos.grnet.gr -x root -P rootpass
</span><span class='line'>(kamaki-env)kedr:Development theofpa$ knife node run_list add snf-81529.vm.okeanos.grnet.gr 'recipe[myapp]'
</span><span class='line'>(kamaki-env)kedr:Development theofpa$ knife ssh name:snf-81529.vm.okeanos.grnet.gr "sudo chef-client" -x root -P rootpass</span></code></pre></td></tr></table></div></figure>


<p>If the VM is ubuntu, it comes with a normal user &amp; sudo right, so in that case the command is slightly different:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(kamaki-env)➜  Development  kamaki server create lefkas 246 aaafe1de-edfe-4f29-8c3f-50707ccd7d0a
</span><span class='line'>(kamaki-env)➜  Development  knife bootstrap snf-155685.vm.okeanos.grnet.gr -x user -P userpass --sudo
</span><span class='line'>(kamaki-env)➜  Development  knife ssh name:snf-155685.vm.okeanos.grnet.gr "sudo chef-client" -x user -P userpass</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google cloud compute engine and chef]]></title>
    <link href="http://theofpa.github.io/blog/2013/12/07/google-cloud-compute-engine-and-chef/"/>
    <updated>2013-12-07T14:50:55+01:00</updated>
    <id>http://theofpa.github.io/blog/2013/12/07/google-cloud-compute-engine-and-chef</id>
    <content type="html"><![CDATA[<p>Opscode knife-google plugin allows you to communicate with the GCE via the knife command.</p>

<p>Assuming that the VM is already spawned:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>theofpa@kedr ~ $ knife google server list -Z us-central1-a
</span><span class='line'>Name    Type      Image  Public IP       Private IP    Disks   Zone           Status
</span><span class='line'>delta1  f1-micro         162.222.178.27  10.240.73.88  delta1  us-central1-a  running</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve registered this IP in one of my DNS zones I maintain using Cloudflare, in order to have a beautiful fqdn.</p>

<p>Bootstrap it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>theofpa@kedr ~ $ knife bootstrap delta1.bigdata.gr -i .ssh/google_compute_engine -x theofpa --sudo
</span><span class='line'>Bootstrapping Chef on delta1.bigdata.gr
</span><span class='line'>delta1.bigdata.gr Starting Chef Client, version 11.4.4
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>And add any of your favourite cookbooks:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>theofpa@kedr ~ $ knife node run_list add delta1.bigdata.gr 'recipe[git], recipe[squid]'
</span><span class='line'>delta1.bigdata.gr:
</span><span class='line'>  run_list:
</span><span class='line'>    recipe[git]
</span><span class='line'>    recipe[squid]
</span><span class='line'>theofpa@kedr ~ $ knife ssh name:delta1.bigdata.gr "sudo chef-client" -i ~/.ssh/google_compute_engine
</span><span class='line'>delta1.bigdata.gr Starting Chef Client, version 11.4.4
</span><span class='line'>delta1.bigdata.gr resolving cookbooks for run list: ["git", "squid"]
</span><span class='line'>delta1.bigdata.gr Synchronizing Cookbooks:
</span><span class='line'>delta1.bigdata.gr   - git
</span><span class='line'>delta1.bigdata.gr   - dmg
</span><span class='line'>delta1.bigdata.gr   - build-essential
</span><span class='line'>delta1.bigdata.gr   - yum
</span><span class='line'>delta1.bigdata.gr   - windows
</span><span class='line'>delta1.bigdata.gr   - chef_handler
</span><span class='line'>delta1.bigdata.gr   - runit
</span><span class='line'>delta1.bigdata.gr   - squid
</span><span class='line'>delta1.bigdata.gr Compiling Cookbooks...
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First post]]></title>
    <link href="http://theofpa.github.io/blog/2013/12/07/first-post/"/>
    <updated>2013-12-07T14:45:52+01:00</updated>
    <id>http://theofpa.github.io/blog/2013/12/07/first-post</id>
    <content type="html"><![CDATA[<p>hello world!</p>
]]></content>
  </entry>
  
</feed>
